package ba.bitcamp.homeworkInheritance.task01;

import java.util.Arrays;

public class CampStringBuilder {

	/*
	 * Declaring properties
	 */
	private char[] characters;

	/**
	 * Constructor
	 * 
	 * @param characters
	 *            - An array of characters.
	 */
	public CampStringBuilder(char[] characters) {
		super();
		this.characters = characters;
	}

	/**
	 * Converts the inputed string into an array of characters and merges it
	 * with CampStringBuilder array of characters.
	 * 
	 * @param o
	 */
	public void append(Object o) {

		char[] strChar = new char[characters.length + o.toString().length()];

		for (int i = 0; i < strChar.length; i++) {
			for (int j = 0; j < characters.length; j++) {
				if (i == j) {
					strChar[i] = characters[j];
				}

			}
			for (int j = 0; j < o.toString().length(); j++) {
				if (i == j + characters.length) {
					strChar[i] = o.toString().charAt(j);
				}

			}
		}

		System.out.println(Arrays.toString(strChar));

	}

	public void prepend(Object o) {

		char[] strChar = new char[characters.length + o.toString().length()];

		for (int i = 0; i < strChar.length; i++) {
			for (int j = 0; j < o.toString().length(); j++) {
				if (i == j) {
					strChar[i] = o.toString().charAt(j);
				}

			}
			for (int j = 0; j < characters.length; j++) {
				if (i == j + o.toString().length()) {
					strChar[i] = characters[j];
				}

			}
		}

		System.out.println(Arrays.toString(strChar));

	}

}
